#!/usr/bin/env node

const ntpl = require('commander'),
    parser = require('./utils/parser'),
    core = require('./utils/core')

ntpl
  .version('0.4.3', '-v, --version')
  .option('-c, --components [value]', 'kubernetes components', parser.componentReader, [])
  .option('-p, --parameters [value]', 'parameters file (yaml|yml)', parser.parameterReader, [])
  .option('-k, --keyPairs [value]', 'Key=Value Parameter', parser.keyReader, [])
  .option('-t, --template <file>', 'template file')
  .option('-o, --output <file>', 'output file')

ntpl
  .command('compile')
  .description('Compile Kubernetes component templates.')
  .action(() => {
    core.kubeCompile(ntpl)
  })

ntpl
  .command('validate')
  .description('Validate Kubernetes component templates.')
  .action(() => {
    core.kubeValidate(ntpl)
  })

ntpl
  .command('apply')
  .description('Apply Kubernetes component templates into kubernetes.')
  .action(() => {
    core.kubeApply(ntpl)
  })

ntpl
  .command('delete')
  .description('Delete Kubernetes component resources from kubernetes')
  .action(() => {
    core.kubeDelete(ntpl)
  })

ntpl
  .command('render')
  .description('Generate template')
  .action(() => {
    core.templateRender(ntpl)
  })

ntpl
  .parse(process.argv)
